@tailwind base;
@tailwind components;
@tailwind utilities;

/* Hero Section Custom Animations */
@keyframes gridMove {
  0% { transform: translate(0, 0); }
  100% { transform: translate(40px, 40px); }
}

@keyframes float {
  0%, 100% { 
    transform: translateY(0px) translateX(0px);
    opacity: 0.7;
  }
  25% { 
    transform: translateY(-10px) translateX(5px);
    opacity: 1;
  }
  50% { 
    transform: translateY(-5px) translateX(-5px);
    opacity: 0.8;
  }
  75% { 
    transform: translateY(-8px) translateX(3px);
    opacity: 1;
  }
}

/* Mining Rig Animations */
@keyframes fanSpin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes fanSpinReverse {
  0% { transform: rotate(360deg); }
  100% { transform: rotate(0deg); }
}

@keyframes glowPulse {
  0%, 100% { 
    filter: brightness(1) drop-shadow(0 0 10px currentColor);
    opacity: 0.8;
  }
  50% { 
    filter: brightness(1.2) drop-shadow(0 0 20px currentColor);
    opacity: 1;
  }
}

@keyframes neonFlickerPurple {
  0%, 100% { 
    filter: drop-shadow(0 0 5px #8b5cf6) brightness(1);
    opacity: 0.9;
  }
  10% { 
    filter: drop-shadow(0 0 15px #8b5cf6) brightness(1.1);
    opacity: 0.95;
  }
  20% { 
    filter: drop-shadow(0 0 8px #8b5cf6) brightness(0.95);
    opacity: 0.85;
  }
  30% { 
    filter: drop-shadow(0 0 20px #8b5cf6) brightness(1.2);
    opacity: 1;
  }
  50% { 
    filter: drop-shadow(0 0 12px #8b5cf6) brightness(1.05);
    opacity: 0.9;
  }
  70% { 
    filter: drop-shadow(0 0 18px #8b5cf6) brightness(1.15);
    opacity: 0.95;
  }
}

@keyframes neonFlickerGreen {
  0%, 100% { 
    filter: drop-shadow(0 0 5px #10b981) brightness(1);
    opacity: 0.8;
  }
  15% { 
    filter: drop-shadow(0 0 12px #10b981) brightness(1.1);
    opacity: 0.9;
  }
  25% { 
    filter: drop-shadow(0 0 8px #10b981) brightness(0.9);
    opacity: 0.75;
  }
  40% { 
    filter: drop-shadow(0 0 16px #10b981) brightness(1.2);
    opacity: 0.95;
  }
  60% { 
    filter: drop-shadow(0 0 10px #10b981) brightness(1.05);
    opacity: 0.85;
  }
  80% { 
    filter: drop-shadow(0 0 14px #10b981) brightness(1.1);
    opacity: 0.9;
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-grid-move {
  animation: gridMove 20s linear infinite;
}

.animate-fan-spin {
  animation: fanSpin linear infinite;
}

.animate-fan-spin-reverse {
  animation: fanSpinReverse linear infinite;
}

.animate-glow-pulse {
  animation: glowPulse 3s ease-in-out infinite;
}

.animate-neon-flicker-purple {
  animation: neonFlickerPurple 4s ease-in-out infinite;
}

.animate-neon-flicker-green {
  animation: neonFlickerGreen 3.5s ease-in-out infinite;
}

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 220 15% 95%;

  --foreground: 220 15% 12%;

  --border: 220 15% 85%;

  --card: 220 15% 92%;

  --card-foreground: 220 15% 15%;

  --card-border: 220 15% 88%;

  --sidebar: 220 15% 89%;

  --sidebar-foreground: 220 15% 18%;

  --sidebar-border: 220 15% 85%;

  --sidebar-primary: 25 95% 55%;

  --sidebar-primary-foreground: 25 95% 98%;

  --sidebar-accent: 220 15% 82%;

  --sidebar-accent-foreground: 220 15% 25%;

  --sidebar-ring: 25 95% 55%;

  --popover: 220 15% 88%;

  --popover-foreground: 220 15% 20%;

  --popover-border: 220 15% 82%;

  --primary: 25 95% 55%;

  --primary-foreground: 25 95% 98%;

  --secondary: 220 15% 85%;

  --secondary-foreground: 220 15% 25%;

  --muted: 220 12% 82%;

  --muted-foreground: 220 12% 30%;

  --accent: 220 15% 80%;

  --accent-foreground: 220 15% 28%;

  --destructive: 0 84% 35%;

  --destructive-foreground: 0 84% 98%;

  --input: 220 15% 75%;
  --ring: 25 95% 55%;
  --chart-1: 270 100% 35%;
  --chart-2: 142 70% 30%;
  --chart-3: 25 95% 35%;
  --chart-4: 285 85% 35%;
  --chart-5: 220 15% 35%;

  /* Neon Colors for Mining Rig */
  --neon-purple: 271 100% 71%;
  --neon-green: 142 71% 45%;
  --mining-orange: 25 95% 53%;

  --font-sans: Inter, system-ui, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Orbitron, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(220 15% 0% / 0.05);
  --shadow-xs: 0px 2px 0px 0px hsl(220 15% 0% / 0.08);
  --shadow-sm: 0px 2px 0px 0px hsl(220 15% 0% / 0.05), 0px 1px 2px -1px hsl(220 15% 0% / 0.10);
  --shadow: 0px 2px 0px 0px hsl(220 15% 0% / 0.05), 0px 1px 2px -1px hsl(220 15% 0% / 0.10);
  --shadow-md: 0px 2px 0px 0px hsl(220 15% 0% / 0.05), 0px 2px 4px -1px hsl(220 15% 0% / 0.15);
  --shadow-lg: 0px 2px 0px 0px hsl(220 15% 0% / 0.05), 0px 4px 6px -1px hsl(220 15% 0% / 0.20);
  --shadow-xl: 0px 2px 0px 0px hsl(220 15% 0% / 0.05), 0px 8px 10px -1px hsl(220 15% 0% / 0.25);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 15% 0% / 0.10);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 15% 8%;

  --foreground: 0 0% 95%;

  --border: 220 15% 18%;

  --card: 220 12% 12%;

  --card-foreground: 0 0% 92%;

  --card-border: 220 12% 20%;

  --sidebar: 220 15% 10%;

  --sidebar-foreground: 0 0% 88%;

  --sidebar-border: 220 15% 15%;

  --sidebar-primary: 25 95% 55%;

  --sidebar-primary-foreground: 25 95% 98%;

  --sidebar-accent: 220 12% 18%;

  --sidebar-accent-foreground: 0 0% 85%;

  --sidebar-ring: 25 95% 55%;

  --popover: 220 12% 15%;

  --popover-foreground: 0 0% 88%;

  --popover-border: 220 12% 22%;

  --primary: 25 95% 55%;

  --primary-foreground: 25 95% 98%;

  --secondary: 220 12% 20%;

  --secondary-foreground: 0 0% 85%;

  --muted: 220 12% 16%;

  --muted-foreground: 0 0% 70%;

  --accent: 220 12% 18%;

  --accent-foreground: 0 0% 82%;

  --destructive: 0 84% 35%;

  --destructive-foreground: 0 84% 98%;

  /* Used as the border around inputs. Dark mode: Should be a border that is light enough to have high contrast when rendered on a --card background. More contrast than standard --border */
  --input: 220 12% 35%;
  --ring: 25 95% 55%;
  --chart-1: 270 100% 65%;
  --chart-2: 142 70% 55%;
  --chart-3: 25 95% 65%;
  --chart-4: 285 85% 75%;
  --chart-5: 220 15% 65%;

  /* Neon Colors for Mining Rig */
  --neon-purple: 271 100% 71%;
  --neon-green: 142 71% 45%;
  --mining-orange: 25 95% 53%;

  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.25);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.30);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.25), 0px 1px 2px -1px hsl(0 0% 0% / 0.35);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.25), 0px 1px 2px -1px hsl(0 0% 0% / 0.35);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.25), 0px 2px 4px -1px hsl(0 0% 0% / 0.40);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.25), 0px 4px 6px -1px hsl(0 0% 0% / 0.45);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.25), 0px 8px 10px -1px hsl(0 0% 0% / 0.50);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.35);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
  
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(1rem);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fade-in {
    animation: fade-in 0.7s ease-out;
  }

  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
}